/* Notification system styling */

.notification-container {
    position: fixed;
    top: 20px;
    right: 20px;
    width: 350px;
    max-width: 80vw;
    max-height: 80vh;
    overflow-y: auto;
    overflow-x: hidden;
    /* Prevent horizontal scrollbar */
    z-index: 20000;
    /* High z-index to ensure visibility */
    display: flex;
    flex-direction: column;
    gap: 10px;
    pointer-events: none;
    /* Allow clicking through the container */
    visibility: visible !important;
    opacity: 1 !important;
}

.notification {
    background-color: rgba(45, 45, 45, 0.95);
    color: white;
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    margin-bottom: 10px;
    pointer-events: auto;
    /* Re-enable pointer events for each notification */
    border-left: 5px solid #007bff;
    transform: translateX(100%);
    transition: transform 0.3s ease, opacity 0.3s ease, box-shadow 0.3s ease;
    min-height: 70px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
    /* For absolute positioning of dismiss button */
    opacity: 0;
    will-change: transform, opacity;
    box-sizing: border-box;
    /* Ensure padding doesn't affect width */
    width: calc(100% - 5px);
    /* Slightly smaller width to accommodate hover scaling */
}

/* Animation only plays once when notification is first shown */
.notification.notification-shown {
    transform: translateX(0) !important;
    opacity: 1 !important;
}

.notification:hover {
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6);
    transform: translateX(0) scale(1.01) !important;
    /* Reduced scale factor */
    margin-right: 2px;
    /* Add a small right margin to compensate for scale */
}

/* Add specific styling for notifications that are being dismissed */
.notification.notification-exiting {
    transform: translateX(100%) !important;
    opacity: 0 !important;
    transition: transform 0.5s ease, opacity 0.5s ease;
}

.notification.success {
    border-left-color: #28a745;
}

.notification.warning {
    border-left-color: #ffc107;
}

.notification.error {
    border-left-color: #dc3545;
}

.notification.info {
    border-left-color: #17a2b8;
}

.notification-content {
    margin-bottom: 10px;
    padding-right: 20px;
    /* Make room for dismiss button */
}

.notification-content h4 {
    margin: 0 0 5px 0;
    font-size: 16px;
    font-weight: 600;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.notification-content p {
    margin: 0;
    font-size: 14px;
    opacity: 0.9;
    word-wrap: break-word;
}

.notification-actions {
    display: flex;
    justify-content: flex-end;
    gap: 8px;
    margin-top: auto;
}

.notification-action {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 12px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.notification-action:hover {
    background-color: #0069d9;
}

.notification-action.secondary {
    background-color: #6c757d;
}

.notification-action.secondary:hover {
    background-color: #5a6268;
}

.notification-dismiss {
    background-color: transparent;
    color: rgba(255, 255, 255, 0.7);
    border: none;
    font-size: 16px;
    padding: 0;
    margin-left: auto;
    cursor: pointer;
    transition: color 0.2s;
    position: absolute;
    top: 10px;
    right: 10px;
}

.notification-dismiss:hover {
    color: white;
}

/* Modified animations for one-time use */
@keyframes notificationSlideIn {
    0% {
        transform: translateX(100%);
        opacity: 0;
    }

    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes notificationSlideOut {
    0% {
        transform: translateX(0);
        opacity: 1;
    }

    100% {
        transform: translateX(100%);
        opacity: 0;
    }
}

/* Only use this animation when specifically applied */
@keyframes notificationFlash {
    0% {
        background-color: rgba(45, 45, 45, 0.95);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    }

    50% {
        background-color: rgba(74, 74, 74, 0.95);
        box-shadow: 0 5px 15px rgba(0, 100, 255, 0.7);
        transform: translateX(0) scale(1.05);
    }

    100% {
        background-color: rgba(45, 45, 45, 0.95);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    }
}

/* Use CSS to explicitly force visibility */
.notification-container,
.notification {
    visibility: visible !important;
    display: flex !important;
}

/* Force notifications to be seen correctly */
body:has(.notification) .notification-container {
    visibility: visible !important;
    opacity: 1 !important;
    display: flex !important;
}

/* Ensure notifications are displayed immediately when added */
.notification {
    animation-fill-mode: forwards !important;
}

/* Initial slide-in animation for new notifications */
.notification:not(.notification-shown):not(.notification-exiting) {
    animation: notificationSlideIn 0.5s ease-out forwards;
}

/* For smaller screens, adjust the notification width */
@media (max-width: 576px) {
    .notification-container {
        width: 90vw;
        right: 5vw;
        left: 5vw;
        max-width: none;
    }
}